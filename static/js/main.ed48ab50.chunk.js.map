{"version":3,"sources":["global/Button.jsx","hooks/useOutsideClicked.jsx","global/Modal.jsx","GroceryList/AddListModal.jsx","GroceryList/GroceryLists.jsx","GroceryList/GroceryEditListItem.jsx","data/dataProvider.js","GroceryList/EditGroceryList.jsx","GroceryList/ShopGroceryListItem.jsx","GroceryList/ShopGroceryList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","children","clickHandler","type","onClickHandler","console","log","buttonClasses","className","onClick","useOutsideClicked","ref","handler","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","Modal","modalTitle","closeHandler","modalRef","useRef","style","backgroundColor","AddListModal","addListHandler","useState","name","setName","errorMessage","setErrorMessage","newNameRef","focus","htmlFor","id","defaultValue","onChange","e","value","items","GroceryLists","lists","deleteListHandler","length","map","list","index","to","GroceryEditListItem","listId","listItem","deleteHandler","updateHandler","quantity","setQuantity","item","setItem","itemName","getLists","Object","keys","localStorage","filter","includes","listKey","JSON","parse","getItem","sort","a","b","getList","updateList","listData","newListObject","stringify","dataProvider","removeListItem","listItemId","listItems","addNewListItem","push","acquired","updateListItem","updatedItem","listItemIndex","findIndex","clearLists","clear","removeList","removeItem","EditGroceryList","useParams","currentList","setCurrentList","setListItems","querySelector","scrollIntoView","behavior","itemId","updatedList","body","ShopGroceryListItem","setAcquired","textDecoration","acquiredStatus","onChangeHandler","ShopGroceryList","App","modalOpen","setModalOpen","savedLists","setLists","exact","path","updatedLists","newId","newList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed48ab50.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Button({ children, clickHandler, type = \"default\" }) {\n  const onClickHandler =\n    clickHandler || (() => console.log(\"button was clicked\"));\n\n  let buttonClasses = \"flex items-start px-2 py-2 font-semibold border rounded-sm shadow-sm\";\n\n  switch (type) {\n    case \"success\":\n      buttonClasses += \" bg-green-500 border-green-600 text-gray-800\";\n      break;\n\n    case \"error\":\n      buttonClasses += \" bg-red-500 border-red-600 text-gray-200\";\n      break;\n\n    case \"primary\":\n      buttonClasses += \" bg-blue-500 border-blue-600 text-gray-200\";\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <button className={buttonClasses} onClick={onClickHandler}>\n      {children ?? \"Click\"}\n    </button>\n  );\n}\n\nexport default Button;\n","import { useEffect } from \"react\";\n\nconst useOutsideClicked = (ref, handler) => {\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                handler();\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref, handler]);\n}\n\nexport default useOutsideClicked","import { XIcon } from '@heroicons/react/outline'\nimport React, { useRef } from 'react'\nimport useOutsideClicked from '../hooks/useOutsideClicked';\n\nfunction Modal({\n    children,\n    modalTitle = \"Modal Title\",\n    closeHandler,\n}) {\n    const modalRef = useRef(null);\n    useOutsideClicked(modalRef, closeHandler)\n\n    return (\n        <div className=\"absolute top-0 right-0 bottom-0 left-0 py-5\" style={{ backgroundColor: \"rgba(0,0,0,.3\" }}>\n            <div ref={modalRef} className=\"bg-gray-300 w-5/6 mx-auto py-2 px-2 shadow\">\n                <div className=\"flex justify-between items-center mb-2\">\n                    <p className=\"font-bold\">{modalTitle}</p>\n                    <XIcon className=\"w-5\" onClick={() => closeHandler()} />\n                </div>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Modal\n","import React, { useEffect, useRef, useState } from 'react'\nimport Button from '../global/Button';\nimport Modal from '../global/Modal'\n\nfunction AddListModal({ closeHandler, addListHandler }) {\n    const [name, setName] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    function clickHandler() {\n        if (!name) {\n            setErrorMessage(\"Please enter a name\");\n            return;\n        }\n\n        addListHandler({ name: name, items: [] });\n        closeHandler();\n    }\n\n    const newNameRef = useRef(null);\n\n    useEffect(() => {\n        newNameRef.current.focus();\n    }, []);\n\n    return (\n        <Modal\n            closeHandler={closeHandler}\n            modalTitle=\"Start new list\"\n        >\n            {errorMessage && <div className=\"px-2 py-1 mb-2 text-gray-50 bg-red-400\">\n                {errorMessage}\n            </div>}\n            <div>\n                <label htmlFor=\"list_name\">List Name: </label>\n                <input ref={newNameRef} id=\"list_name\" defaultValue={name} onChange={(e) => setName(e.target.value)} className=\"border border-gray-400 p-1 rounded-sm\" type=\"text\" />\n            </div>\n            <div className=\"flex justify-end mt-6\">\n                <Button type=\"success\" clickHandler={clickHandler}>Start List</Button>\n            </div>\n        </Modal>\n    )\n}\n\nexport default AddListModal\n","import React from 'react'\nimport Button from '../global/Button'\nimport {\n    Link,\n} from \"react-router-dom\";\nimport { PencilIcon, ShoppingCartIcon, TrashIcon } from '@heroicons/react/outline';\n\nfunction GroceryLists({ lists, deleteListHandler }) {\n\n    return (\n        <div>\n            <p className=\"font-bold text-lg mt-4\">{lists.length > 0 ? \"Current Lists\" : \"No Lists Yet\"}</p>\n\n            {lists.map((list, index) => {\n                return (\n                    <div className=\"flex justify-between items-center px-1 mb-8\" key={`glist_${index}`}>\n                        <p>{list.name}</p>\n                        <div className=\"flex space-x-2\">\n                            <Button type=\"error\" clickHandler={() => deleteListHandler(list.id)}><TrashIcon className=\"w-6\" /></Button>\n\n                            <Link to={`/lists/${list.id}`}>\n                                <Button type=\"primary\" clickHandler={null}><PencilIcon className=\"w-6\" /></Button>\n                            </Link>\n\n                            <Link to={`/lists/shop/${list.id}`}>\n                                <Button type=\"success\" clickHandler={null}><ShoppingCartIcon className=\"w-6\" /></Button>\n                            </Link>\n\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default GroceryLists\n","import React, { useState } from 'react'\nimport { TrashIcon } from '@heroicons/react/outline'\n\n\nimport Button from '../global/Button';\n\nfunction GroceryEditListItem({ listId, listItem, deleteHandler, updateHandler }) {\n    const [quantity, setQuantity] = useState(listItem.quantity ?? 1);\n    const [item, setItem] = useState(listItem.item ?? \"\");\n\n    function onChangeHandler(itemName) {\n        setItem(itemName);\n        updateHandler(listId, { id: listItem.id, item: itemName, quantity })\n    }\n\n    return (\n        <div className=\"flex flex-col items-end space-x-2 mb-2 item-row\">\n            <div className=\"flex mb-2\">\n                <div className=\"w-1/12 mr-2\">\n                    <label htmlFor={`quantity_${listItem.id}`}>Qty: </label>\n                    <input\n                        id={`quantity_${listItem.id}`}\n                        defaultValue={quantity}\n                        onChange={(e) => setQuantity(e.target.value)}\n                        className=\"border border-gray-400 p-1 mt-1 rounded-sm w-full\"\n                        type=\"number\"\n                    />\n                </div>\n                <div className=\"w-11/12\">\n                    <label htmlFor={`item_${listItem.id}`}>Item: </label>\n                    <input\n                        id={`item_${listItem.id}`}\n                        defaultValue={item}\n                        onChange={(e) => onChangeHandler(e.target.value)}\n                        className=\"border border-gray-400 p-1 mt-1 rounded-sm w-full\"\n                        type=\"text\"\n                    />\n                </div>\n            </div>\n\n            <div className=\"flex justify-between space-x-2\">\n                <Button type=\"error\" clickHandler={() => deleteHandler(listItem.id)}>\n                    <TrashIcon className=\"w-5\" />\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default GroceryEditListItem\n","const getLists = () => {\n    let listKeys = Object.keys(localStorage).filter((list) => list.includes('list_'));\n\n    return listKeys.map((listKey) => JSON.parse(localStorage.getItem(listKey))).sort((a,b) => a.id - b.id );\n}\n\nconst getList = (id) => {\n    return JSON.parse(localStorage.getItem(`list_${id}`));\n}\n\nconst addNewListItem = (listId) => {\n    let list = getList(listId);\n\n    let listItems = [...list.items];\n\n    listItems.push({\n        id: listItems.length + 1,\n        quantity: 1,\n        item: \"\",\n        acquired: false,\n    });\n\n    list.items = listItems;\n\n    return updateList(listId, { ...list });\n}\n\nconst removeListItem = (listId, listItemId) => {\n    let list = getList(listId);\n\n    let listItems = [...list.items];\n\n    list.items = listItems.filter((listItem) => listItem.id !== listItemId);\n\n    return updateList(listId, { ...list });\n}\n\nconst removeList = (listId) => {\n    localStorage.removeItem(`list_${listId}`);\n\n    return getLists();\n}\n\nconst updateList = (listId, listData) => {\n    let list = getList(listId);\n\n    let newListObject = { ...list, ...listData };\n\n    newListObject.name = listData.name || list.name;\n    newListObject.items = listData.items || list.items;\n\n    localStorage.setItem(`list_${list.id}`, JSON.stringify(newListObject));\n\n    return newListObject;\n};\n\nconst updateListItem = (listId, updatedItem) => {\n    const list = getList(listId);\n\n    const items = [...list.items];\n\n    const listItemIndex = items.findIndex((item) => item.id === updatedItem.id);\n\n    items[listItemIndex]= {...items[listItemIndex], ...updatedItem};\n\n    list.items = items;\n\n    localStorage.setItem(`list_${list.id}`, JSON.stringify(list));\n\n    return list;\n}\n\nconst clearLists = () => {\n    localStorage.clear();\n}\n\n\nconst dataProvider = {\n    getLists,\n    getList,\n    removeListItem,\n    addNewListItem,\n    updateListItem,\n    updateList,\n    clearLists,\n    removeList,\n}\n\nexport default dataProvider;","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { ChevronLeftIcon, PlusSmIcon, ArrowCircleUpIcon } from '@heroicons/react/outline'\nimport GroceryEditListItem from './GroceryEditListItem';\nimport Button from '../global/Button';\nimport dataProvider from '../data/dataProvider';\n\nfunction EditGroceryList() {\n    const { id } = useParams();\n\n    const [currentList, setCurrentList] = useState(dataProvider.getList(id));\n    const [listItems, setListItems] = useState([]);\n\n    useEffect(() => {\n        if (currentList) {\n            setListItems([...currentList.items])\n        }\n    }, [currentList]);\n\n    useEffect(() => {\n        if (listItems.length > 1) {\n            const lastItemRow = document.querySelector('.item-row:last-child');\n            lastItemRow.scrollIntoView({ behavior: \"smooth\" });\n        }\n    }, [listItems]);\n\n    if (!currentList) {\n        return null;\n    }\n\n\n    function addNewItemHandler() {\n        const updatedList = dataProvider.addNewListItem(id);\n\n        setCurrentList(updatedList);\n        setListItems(updatedList.items);\n    }\n\n    function deleteHandler(itemId) {\n        const updatedList = dataProvider.removeListItem(id, itemId);\n\n        setCurrentList(updatedList);\n        setListItems(updatedList.items);\n    }\n\n    function updateHandler(listId, item) {\n        const updatedList = dataProvider.updateListItem(listId, item);\n\n        setCurrentList(updatedList);\n        setListItems(updatedList.items);\n    }\n\n    function backToTop() {\n        document.body.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    return (\n        <div>\n            <div className=\"flex items-center\">\n                <div className=\"w-1/6\">\n                    <Link to=\"/\">\n                        <ChevronLeftIcon className=\"w-6\" />\n                    </Link>\n                </div>\n                <p className=\"font-bold text-xl flex-1\">{currentList.name}</p>\n            </div>\n\n            <div className=\"flex flex-col mt-5 mb-12 item-list\">\n                {listItems.length === 0 && <p className=\"mt-5\">No items yet.</p>}\n\n                {listItems.map((listItem, index) => <GroceryEditListItem listId={id} updateHandler={updateHandler} deleteHandler={deleteHandler} listItem={listItem} key={`list_item_${index}`} />)}\n\n            </div>\n            <div className=\"flex mt-8 justify-between fixed bottom-2 right-2 left-2\">\n                <Button type=\"primary\" clickHandler={backToTop}><ArrowCircleUpIcon className=\"w-5\" /></Button>\n                <Button type=\"success\" clickHandler={addNewItemHandler}><PlusSmIcon className=\"w-5\" /> Add Item</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default EditGroceryList\n","import { ShoppingBagIcon } from '@heroicons/react/outline'\nimport React, { useState } from 'react'\nimport Button from '../global/Button'\n\nfunction ShopGroceryListItem({listId, listItem, updateHandler }) {\n    const [item, setItem] = useState(listItem ?? \"\");\n\n    const [acquired, setAcquired] = useState(item.acquired ?? false);\n\n    function onChangeHandler() {\n        const acquiredStatus = !acquired;\n        setAcquired(acquiredStatus);\n        setItem({...item, acquired: acquiredStatus});\n        updateHandler(listId, { id: listItem.id, acquired: acquiredStatus })\n    }\n\n    return (\n        <div className=\"flex items-center space-x-3 mb-4\" style={{ textDecoration: acquired ? 'line-through' : null }}>\n            <Button type=\"primary\" clickHandler={() => onChangeHandler()}>\n                <ShoppingBagIcon className=\"w-5\" />\n            </Button>\n            <p>{item.quantity} {item.item}</p>\n        </div>\n    )\n}\n\nexport default ShopGroceryListItem\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { ChevronLeftIcon } from '@heroicons/react/outline'\n\nimport dataProvider from '../data/dataProvider';\nimport ShopGroceryListItem from './ShopGroceryListItem';\n\nfunction ShopGroceryList() {\n    const { id } = useParams();\n\n    const [currentList, setCurrentList] = useState(dataProvider.getList(id));\n    const [listItems, setListItems] = useState([]);\n\n    useEffect(() => {\n        if (currentList) {\n            setListItems([...currentList.items])\n        }\n    }, [currentList]);\n\n    function updateHandler(listId, item) {\n        const updatedList = dataProvider.updateListItem(listId, item);\n\n        setCurrentList(updatedList);\n        setListItems(updatedList.items);\n    }\n\n    return (\n        <div>\n            <div className=\"flex items-center\">\n                <div className=\"w-1/6\">\n                    <Link to=\"/\">\n                        <ChevronLeftIcon className=\"w-6\" />\n                    </Link>\n                </div>\n                <p className=\"font-bold text-xl w-5/6\">Shopping {currentList.name}</p>\n            </div>\n            <div className=\"flex flex-col mt-5 mb-12 item-list\">\n                {listItems.length === 0 && <p className=\"mt-5\">No items yet.</p>}\n\n                {listItems.map((listItem, index) => <ShopGroceryListItem listId={id} updateHandler={updateHandler} listItem={listItem} key={`list_item_${index}`} />)}\n\n            </div>\n        </div>\n    )\n}\n\nexport default ShopGroceryList\n","import { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { PlusSmIcon, ShoppingCartIcon, TrashIcon } from '@heroicons/react/outline'\n\nimport Button from \"./global/Button\";\n\nimport AddListModal from \"./GroceryList/AddListModal\";\nimport GroceryLists from \"./GroceryList/GroceryLists\";\nimport EditGroceryList from \"./GroceryList/EditGroceryList\";\nimport dataProvider from \"./data/dataProvider\";\nimport ShopGroceryList from \"./GroceryList/ShopGroceryList\";\n\nfunction App() {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const savedLists = dataProvider.getLists();\n\n  const [lists, setLists] = useState(savedLists);\n\n  function addListHandler(list) {\n    const newId = lists.length + 1;\n    const newList = { ...list, id: newId };\n\n    localStorage.setItem(`list_${newId}`, JSON.stringify(newList));\n\n    setLists([...lists, newList]);\n  }\n\n  function removeList(listId) {\n    const updatedLists = dataProvider.removeList(listId);\n\n    setLists(updatedLists);\n  }\n\n  function clearLists() {\n    dataProvider.clearLists();\n    setLists([]);\n  }\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-300\">\n      <header className=\"w-full bg-gray-500 text-gray-50 py-3 px-2 h-12\">\n        <div className=\"flex\">\n          Grocery List App\n        </div>\n      </header>\n      <main className=\"my-2 px-2 flex-1\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/lists/:id\">\n              <EditGroceryList />\n            </Route>\n            <Route exact path=\"/lists/shop/:id\">\n              <ShopGroceryList />\n            </Route>\n            <Route path=\"/\">\n              <div className=\"flex justify-between\">\n                <Button type=\"success\" clickHandler={() => setModalOpen(true)}><PlusSmIcon className=\"w-5\" /> Create list</Button>\n                <Button type=\"error\" clickHandler={() => clearLists()}><TrashIcon className=\"w-5\" /> Clear All</Button>\n              </div>\n              <GroceryLists lists={lists} deleteListHandler={removeList} />\n            </Route>\n          </Switch>\n        </Router>\n      </main>\n\n      {modalOpen && <AddListModal closeHandler={() => setModalOpen(false)} addListHandler={addListHandler} />}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}