{"version":3,"sources":["global/Button.jsx","hooks/useOutsideClicked.jsx","global/Modal.jsx","GroceryList/AddListModal.jsx","GroceryList/GroceryLists.jsx","GroceryList/GroceryEditListItem.jsx","data/dataProvider.js","data/categoryDataProvider.js","GroceryList/EditGroceryList.jsx","GroceryList/ShopGroceryListItem.jsx","GroceryList/ShopGroceryList.jsx","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["Button","children","clickHandler","type","onClickHandler","console","log","buttonClasses","className","onClick","useOutsideClicked","ref","handler","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","Modal","modalTitle","closeHandler","modalRef","useRef","style","backgroundColor","AddListModal","addListHandler","useState","name","setName","errorMessage","setErrorMessage","submitListHandler","preventDefault","newNameRef","focus","onSubmit","htmlFor","id","defaultValue","onChange","e","value","GroceryLists","lists","deleteListHandler","length","map","list","index","to","GroceryEditListItem","listCategories","listId","listItem","deleteHandler","updateHandler","item","setItem","category","setCategory","itemName","itemCategory","listCategory","getLists","Object","keys","localStorage","filter","includes","listKey","JSON","parse","getItem","sort","a","b","getList","updateList","listData","newListObject","items","stringify","dataProvider","addList","listName","newListId","splice","newList","removeListItem","listItemId","listItems","addNewListItem","push","acquired","updateListItem","updatedItem","listItemIndex","findIndex","clearLists","clear","removeList","removeItem","categoryDataProvider","getCategories","EditGroceryList","useParams","currentList","setCurrentList","setListItems","querySelector","scrollIntoView","behavior","itemId","updatedList","body","ShopGroceryListItem","setAcquired","textDecoration","acquiredStatus","onChangeHandler","quantity","ShopGroceryList","visibleCategory","setVisibleCategory","formatGroceryListItems","allCategories","categories","groceryItems","cat","index_2","App","modalOpen","setModalOpen","savedLists","setLists","exact","path","updatedLists","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a5f7ed7e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Button({ children, clickHandler, type = \"default\" }) {\n  const onClickHandler =\n    clickHandler || (() => console.log(\"button was clicked\"));\n\n  let buttonClasses = \"flex items-start px-2 py-2 font-semibold border rounded-sm shadow-sm\";\n\n  switch (type) {\n    case \"success\":\n      buttonClasses += \" bg-green-500 border-green-600 text-gray-800\";\n      break;\n\n    case \"error\":\n      buttonClasses += \" bg-red-500 border-red-600 text-gray-200\";\n      break;\n\n    case \"primary\":\n      buttonClasses += \" bg-blue-500 border-blue-600 text-gray-200\";\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <button className={buttonClasses} onClick={onClickHandler}>\n      {children ?? \"Click\"}\n    </button>\n  );\n}\n\nexport default Button;\n","import { useEffect } from \"react\";\n\nconst useOutsideClicked = (ref, handler) => {\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                handler();\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref, handler]);\n}\n\nexport default useOutsideClicked","import { XIcon } from '@heroicons/react/outline'\nimport React, { useRef } from 'react'\nimport useOutsideClicked from '../hooks/useOutsideClicked';\n\nfunction Modal({\n    children,\n    modalTitle = \"Modal Title\",\n    closeHandler,\n}) {\n    const modalRef = useRef(null);\n    useOutsideClicked(modalRef, closeHandler)\n\n    return (\n        <div className=\"absolute top-0 right-0 bottom-0 left-0 pt-10\" style={{ backgroundColor: \"rgba(0,0,0,.4\" }}>\n            <div ref={modalRef} className=\"bg-gray-300 w-5/6 mx-auto py-2 px-3 shadow-lg rounded-sm border-gray-400 border\">\n                <div className=\"flex justify-between items-center mb-2\">\n                    <p className=\"font-bold\">{modalTitle}</p>\n                    <XIcon className=\"w-5\" onClick={() => closeHandler()} />\n                </div>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Modal\n","import React, { useEffect, useRef, useState } from 'react'\nimport Button from '../global/Button';\nimport Modal from '../global/Modal'\n\nfunction AddListModal({ closeHandler, addListHandler }) {\n    const [name, setName] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    function submitListHandler(event) {\n        event.preventDefault();\n\n        if (!name) {\n            setErrorMessage(\"Please enter a name\");\n            return;\n        }\n\n        addListHandler(name);\n        closeHandler();\n    }\n\n    const newNameRef = useRef(null);\n\n    useEffect(() => {\n        newNameRef.current.focus();\n    }, []);\n\n    return (\n        <Modal\n            closeHandler={closeHandler}\n            modalTitle=\"Start new list\"\n        >\n            {errorMessage && <div className=\"px-2 py-1 mb-2 text-gray-50 bg-red-400\">\n                {errorMessage}\n            </div>}\n            <form onSubmit={submitListHandler}>\n                <div>\n                    <label htmlFor=\"list_name\">List Name: </label>\n                    <input ref={newNameRef} id=\"list_name\" defaultValue={name} onChange={(e) => setName(e.target.value)} className=\"border border-gray-400 p-1 rounded-sm\" type=\"text\" />\n                </div>\n                <div className=\"flex justify-end mt-6\">\n                    <Button type=\"success\" clickHandler={submitListHandler}>Start List</Button>\n                </div>\n            </form>\n        </Modal>\n    )\n}\n\nexport default AddListModal\n","import React from 'react'\nimport Button from '../global/Button'\nimport {\n    Link,\n} from \"react-router-dom\";\nimport { PencilIcon, ShoppingCartIcon, TrashIcon } from '@heroicons/react/outline';\n\nfunction GroceryLists({ lists, deleteListHandler }) {\n\n    return (\n        <div>\n            <p className=\"font-bold text-lg mt-4\">{lists.length > 0 ? \"Current Lists\" : \"No Lists Yet\"}</p>\n\n            {lists.map((list, index) => {\n                return (\n                    <div className=\"flex justify-between items-center px-1 mb-8\" key={`glist_${index}`}>\n                        <p>{list.name}</p>\n                        <div className=\"flex space-x-2\">\n                            <Button type=\"error\" clickHandler={() => deleteListHandler(list.id)}><TrashIcon className=\"w-6\" /></Button>\n\n                            <Link to={`/lists/${list.id}`}>\n                                <Button type=\"primary\" clickHandler={null}><PencilIcon className=\"w-6\" /></Button>\n                            </Link>\n\n                            <Link to={`/lists/shop/${list.id}`}>\n                                <Button type=\"success\" clickHandler={null}><ShoppingCartIcon className=\"w-6\" /></Button>\n                            </Link>\n\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default GroceryLists\n","import React, { useState } from 'react'\nimport { TrashIcon } from '@heroicons/react/outline'\n\nimport Button from '../global/Button';\n\nfunction GroceryEditListItem({ listCategories, listId, listItem, deleteHandler, updateHandler }) {\n    const [item, setItem] = useState(listItem.item ?? \"\");\n    const [category, setCategory] = useState(listItem.category ?? \"Miscellaneous\");\n\n    function nameChangeHandler(itemName) {\n        setItem(itemName);\n        updateHandler(listId, { id: listItem.id, item: itemName, category });\n    }\n\n    function categoryChangeHandler(itemCategory) {\n        setCategory(itemCategory);\n        updateHandler(listId, { id: listItem.id, item, category: itemCategory })\n    }\n\n    return (\n        <div className=\"flex flex-col mb-2 item-row\">\n            <div className=\"flex mb-2\">\n                <div className=\"w-full\">\n                    <label className=\"font-bold\" htmlFor={`item_${listItem.id}`}>Item: </label>\n                    <input\n                        id={`item_${listItem.id}`}\n                        defaultValue={item}\n                        onChange={(e) => nameChangeHandler(e.target.value)}\n                        className=\"border border-gray-400 p-1 mt-1 rounded-sm w-full\"\n                        type=\"text\"\n                    />\n                </div>\n            </div>\n\n            <div className=\"flex justify-between space-x-2\">\n                <div className=\"text-sm\">\n                    <select\n                        name={`category_${listItem.id}`}\n                        id={`category_${listItem.id}`}\n                        className=\"border bg-gray-100 border-gray-400 p-1 mt-1 rounded-sm\"\n                        onChange={(e) => categoryChangeHandler(e.target.value)}\n                        value={category}\n                    >\n                        {listCategories.map((listCategory, index) => (\n                            <option key={`${listCategory}_${index}`} value={listCategory}>{listCategory}</option>\n                        ))}\n                    </select>\n                </div>\n                <Button type=\"error\" clickHandler={() => deleteHandler(listItem.id)}>\n                    <TrashIcon className=\"w-5\" />\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default GroceryEditListItem\n","const getLists = () => {\n    let listKeys = Object.keys(localStorage).filter((list) => list.includes('list_'));\n\n    return listKeys.map((listKey) => JSON.parse(localStorage.getItem(listKey))).sort((a, b) => a.id - b.id);\n}\n\nconst getList = (id) => {\n    return JSON.parse(localStorage.getItem(`list_${id}`));\n}\n\nconst addList = (listName) => {\n    const lists = getLists();\n    let newListId = 1;\n\n    if (lists.length > 0) {\n        newListId = lists.map((list) => list.id).sort().splice(-1, 1)[0] + 1;\n    }\n\n    const newList = {\n        id: newListId,\n        name: listName,\n        items: []\n    }\n\n    localStorage.setItem(`list_${newListId}`, JSON.stringify(newList));\n\n    return getLists();\n}\n\nconst removeList = (listId) => {\n    localStorage.removeItem(`list_${listId}`);\n\n    return getLists();\n}\n\nconst updateList = (listId, listData) => {\n    let list = getList(listId);\n\n    let newListObject = { ...list, ...listData };\n\n    newListObject.name = listData.name || list.name;\n    newListObject.items = listData.items || list.items;\n\n    localStorage.setItem(`list_${list.id}`, JSON.stringify(newListObject));\n\n    return newListObject;\n};\n\n\nconst clearLists = () => {\n    localStorage.clear();\n}\n\nconst addNewListItem = (listId) => {\n    let list = getList(listId);\n\n    let listItems = [...list.items];\n\n    listItems.push({\n        id: listItems.length + 1,\n        item: \"\",\n        acquired: false,\n        category: \"Miscellaneous\",\n    });\n\n    list.items = listItems;\n\n    return updateList(listId, { ...list });\n}\n\nconst removeListItem = (listId, listItemId) => {\n    let list = getList(listId);\n\n    let listItems = [...list.items];\n\n    list.items = listItems.filter((listItem) => listItem.id !== listItemId);\n\n    return updateList(listId, { ...list });\n}\n\n\nconst updateListItem = (listId, updatedItem) => {\n    const list = getList(listId);\n\n    const items = [...list.items];\n\n    const listItemIndex = items.findIndex((item) => item.id === updatedItem.id);\n\n    items[listItemIndex] = { ...items[listItemIndex], ...updatedItem };\n\n    list.items = items;\n\n    localStorage.setItem(`list_${list.id}`, JSON.stringify(list));\n\n    return list;\n}\n\n\nconst dataProvider = {\n    addList,\n    getLists,\n    getList,\n    removeListItem,\n    addNewListItem,\n    updateListItem,\n    updateList,\n    clearLists,\n    removeList,\n}\n\nexport default dataProvider;","const getCategories = () => {\n    return localStorage.getItem(\"categories\") ?? [\n      \"Dairy\",\n      \"Dry/Can Goods\",\n      \"Frozen\",\n      \"Pantry\",\n      \"Produce\",\n      \"Meat\",\n      \"Miscellaneous\",\n    ];\n}\n\nconst categoryDataProvider = {\n    getCategories,\n}\n\nexport default categoryDataProvider;","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { ChevronLeftIcon, PlusSmIcon, ArrowCircleUpIcon } from '@heroicons/react/outline'\nimport GroceryEditListItem from './GroceryEditListItem';\nimport Button from '../global/Button';\nimport dataProvider from '../data/dataProvider';\nimport categoryDataProvider from '../data/categoryDataProvider';\n\nfunction EditGroceryList() {\n    const { id } = useParams();\n\n    const [currentList, setCurrentList] = useState(dataProvider.getList(id));\n    const [listItems, setListItems] = useState([]);\n    const [listCategories, setListCategories] = useState(categoryDataProvider.getCategories());\n\n\n    useEffect(() => {\n        if (currentList) {\n            setListItems([...currentList.items])\n        }\n    }, [currentList]);\n\n    useEffect(() => {\n        if (listItems.length > 1) {\n            const lastItemRow = document.querySelector('.item-row:last-child');\n            lastItemRow.scrollIntoView({ behavior: \"smooth\" });\n        }\n    }, [listItems]);\n\n    if (!currentList) {\n        return null;\n    }\n\n\n    function addNewItemHandler() {\n        const updatedList = dataProvider.addNewListItem(id);\n\n        setCurrentList(updatedList);\n        setListItems(updatedList.items);\n    }\n\n    function deleteHandler(itemId) {\n        const updatedList = dataProvider.removeListItem(id, itemId);\n\n        setCurrentList(updatedList);\n        setListItems(updatedList.items);\n    }\n\n    function updateHandler(listId, item) {\n        const updatedList = dataProvider.updateListItem(listId, item);\n\n        setCurrentList(updatedList);\n        setListItems(updatedList.items);\n    }\n\n    function backToTop() {\n        document.body.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    return (\n        <div>\n            <div className=\"flex items-center\">\n                <div className=\"w-1/6\">\n                    <Link to=\"/\">\n                        <ChevronLeftIcon className=\"w-6\" />\n                    </Link>\n                </div>\n                <p className=\"font-bold text-xl flex-1\">{currentList.name}</p>\n            </div>\n\n            <div className=\"flex flex-col mt-5 mb-12 item-list\">\n                {listItems.length === 0 && <p className=\"mt-5\">No items yet.</p>}\n\n                {listItems.map((listItem, index) => <GroceryEditListItem listCategories={listCategories} listId={id} updateHandler={updateHandler} deleteHandler={deleteHandler} listItem={listItem} key={`list_item_${index}`} />)}\n\n            </div>\n            <div className=\"flex mt-8 justify-between fixed bottom-2 right-2 left-2\">\n                <Button type=\"primary\" clickHandler={backToTop}><ArrowCircleUpIcon className=\"w-5\" /></Button>\n                <Button type=\"success\" clickHandler={addNewItemHandler}><PlusSmIcon className=\"w-5\" /> Add Item</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default EditGroceryList\n","import { ShoppingBagIcon } from '@heroicons/react/outline'\nimport React, { useState } from 'react'\nimport Button from '../global/Button'\n\nfunction ShopGroceryListItem({listId, listItem, updateHandler }) {\n    const [item, setItem] = useState(listItem ?? \"\");\n\n    const [acquired, setAcquired] = useState(item.acquired ?? false);\n\n    function onChangeHandler() {\n        const acquiredStatus = !acquired;\n        setAcquired(acquiredStatus);\n        setItem({...item, acquired: acquiredStatus});\n        updateHandler(listId, { id: listItem.id, acquired: acquiredStatus })\n    }\n\n    return (\n        <div className=\"flex items-center space-x-3 mb-4\" style={{ textDecoration: acquired ? 'line-through' : null }}>\n            <Button type=\"primary\" clickHandler={() => onChangeHandler()}>\n                <ShoppingBagIcon className=\"w-4\" />\n            </Button>\n            <p>{item.quantity} {item.item}</p>\n        </div>\n    )\n}\n\nexport default ShopGroceryListItem\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { ChevronLeftIcon } from '@heroicons/react/outline'\n\nimport dataProvider from '../data/dataProvider';\nimport ShopGroceryListItem from './ShopGroceryListItem';\n\nfunction ShopGroceryList() {\n    const { id } = useParams();\n\n    const [currentList, setCurrentList] = useState(dataProvider.getList(id));\n    const [listItems, setListItems] = useState([]);\n\n    const [visibleCategory, setVisibleCategory] = useState('all');\n\n    useEffect(() => {\n        if (currentList) {\n            formatGroceryListItems(currentList);\n        }\n    }, [currentList]);\n\n    let allCategories = currentList.categories;\n\n    function updateHandler(listId, item) {\n        const updatedList = dataProvider.updateListItem(listId, item);\n\n        setCurrentList(updatedList);\n        formatGroceryListItems(updatedList);\n    }\n\n    function formatGroceryListItems(list) {\n        const categories = list.categories;\n\n        const groceryItems = categories.map((category) => ({\n            category,\n            items: list.items.filter((item) => item.category === category)\n        }));\n\n        setListItems(groceryItems);\n    }\n\n    return (\n        <div>\n            <div className=\"flex items-center\">\n                <div className=\"w-1/6\">\n                    <Link to=\"/\">\n                        <ChevronLeftIcon className=\"w-6\" />\n                    </Link>\n                </div>\n                <p className=\"font-bold text-xl w-5/6\">Shopping {currentList.name}</p>\n            </div>\n            <div className=\"flex mt-4\">\n                <label className=\"pr-2 font-bold\" htmlFor=\"categories\">Filter:</label>\n                <select className=\"bg-gray-200 shadow-sm py-1 pl-1\" name=\"categories\" id=\"categories\" value={visibleCategory} onChange={(e) => setVisibleCategory(e.target.value)}>\n                    <option value=\"all\">All</option>\n                    {\n                        allCategories.map((cat, index) => <option value={cat} key={`category_${index}`}>{cat}</option>)\n                    }\n                </select>\n            </div>\n            <div className=\"flex flex-col mb-12 item-list\">\n                {listItems.length === 0 && <p className=\"mt-5\">No items yet.</p>}\n\n                {listItems.map((listItem, index) =>\n                    <div className={`pb-6 ${listItem.category === visibleCategory || visibleCategory === 'all' ? 'flex flex-col' : 'hidden' }`} key={`list_category_${index}`}>\n                        <p className=\"font-bold text-right\">{listItem.category}</p>\n                        <hr className=\"border-gray-400 mb-2\" />\n                        {listItem.items.map((item, index_2) =>\n                             <ShopGroceryListItem listId={id} updateHandler={updateHandler} listItem={item} key={`list_item_${index_2}`} />)}\n                    </div>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default ShopGroceryList\n","import { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { PlusSmIcon, ShoppingCartIcon, TrashIcon } from '@heroicons/react/outline'\n\nimport Button from \"./global/Button\";\n\nimport AddListModal from \"./GroceryList/AddListModal\";\nimport GroceryLists from \"./GroceryList/GroceryLists\";\nimport EditGroceryList from \"./GroceryList/EditGroceryList\";\nimport dataProvider from \"./data/dataProvider\";\nimport ShopGroceryList from \"./GroceryList/ShopGroceryList\";\n\nfunction App() {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const savedLists = dataProvider.getLists();\n\n  const [lists, setLists] = useState(savedLists);\n\n  function addListHandler(listName) {\n    const updatedLists = dataProvider.addList(listName);\n\n    setLists(updatedLists);\n  }\n\n  function removeList(listId) {\n    const updatedLists = dataProvider.removeList(listId);\n\n    setLists(updatedLists);\n  }\n\n  function clearLists() {\n    dataProvider.clearLists();\n    setLists([]);\n  }\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-300\">\n      <header className=\"w-full bg-gray-500 text-gray-50 py-3 px-2 h-12\">\n        <div className=\"flex\">\n          <ShoppingCartIcon className=\"w-5 mr-1\" />\n          Grocery List App\n        </div>\n      </header>\n      <main className=\"my-2 px-2 flex-1\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/lists/:id\">\n              <EditGroceryList />\n            </Route>\n            <Route exact path=\"/lists/shop/:id\">\n              <ShopGroceryList />\n            </Route>\n            <Route path=\"/\">\n              <div className=\"flex justify-between\">\n                <Button type=\"success\" clickHandler={() => setModalOpen(true)}><PlusSmIcon className=\"w-5\" /> Create list</Button>\n                <Button type=\"error\" clickHandler={() => clearLists()}><TrashIcon className=\"w-5\" /> Clear All</Button>\n              </div>\n              <GroceryLists lists={lists} deleteListHandler={removeList} />\n            </Route>\n          </Switch>\n        </Router>\n      </main>\n\n      {modalOpen && <AddListModal closeHandler={() => setModalOpen(false)} addListHandler={addListHandler} />}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n\n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n\n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n\n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n\n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n\n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n\n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}